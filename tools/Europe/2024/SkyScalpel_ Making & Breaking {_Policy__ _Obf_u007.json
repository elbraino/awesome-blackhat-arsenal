{
  "Tool Name": "SkyScalpel: Making & Breaking {\"Policy\": \"Obf\\u0075scA**Tion\"} in the Cloud",
  "Speakers": [
    "Abian Morina",
    "Daniel Bohannon"
  ],
  "Tracks": [
    "Malware Offense",
    "Malware Defense"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": null,
  "Description": "Cloud security professionals today must understand the role policies play in access management for all identities in their organizations \u2013 humans and machines alike. However, calculating an identity's effective permissions is complex due to policy inheritance (e.g. managed policies inherited from groups, roles and Service Control Principal, each with their own potential inline policies). But is a firm grasp on permissions calculation sufficient?\n\nObfuscation of cloud policies, remote administration command scripts and various permissions parameters is an oft-overlooked attack vector with implications at several stages of the detection engineering pipeline. When \"Allow\" becomes \"Al\\u006Cow\" and \"iam:PassRole\" becomes \"iam:P*ole\", are current detections evaded? Some obfuscation techniques are detectable in runtime events during creation but silently sanitized upon storage and/or later retrieval by corresponding APIs. Other techniques persist into the storage of created entities (e.g. IAM policies). These obfuscation scenarios can evade string-based detections, break policy rendering pages in Management Consoles, and even selectively overwrite policy contents of an attacker's choosing based on the defender's viewing method. Additionally, we identified subtle differences between official cloud provider tooling (CLI, SDKs, Management Console) that complicate the generation and detection of these obfuscation scenarios.\n\nIn this Arsenal session we will showcase obfuscation, deobfuscation, and detection scenarios using SkyScalpel \u2013 our brand new, fully custom open-source JSON tokenizer and syntax tree parser. SkyScalpel includes highly configurable randomized JSON-level obfuscation (Unicode encoding, insignificant whitespace packing, and selective special characters like \\b and \u00a0), policy-level obfuscation at the syntactical and functional levels (e.g., wildcard expansion of ActionNames), and deobfuscation and detection mechanisms for all aforementioned obfuscation capabilities.\n\nCome see how SkyScalpel enables surgical precision in cloud offense and defense.",
  "Year": "2024",
  "Location": "Europe"
}