{
  "Tool Name": "Automated Vulnerability Assessment & Penetration Testing Tool",
  "Speakers": [
    "Shaan Mulchandani",
    "Ravi Keerthi"
  ],
  "Tracks": [
    "Track: Vulnerability Assessment"
  ],
  "Event": "BH-EU-16",
  "Github URL": null,
  "Description": "As application, network, and product complexity grow, so do the attack surface and likelihood of vulnerabilities. Highly-skilled pen testers do not scale exponentially, and findings don't make it into secure coding practices or DevOps overnight.How can we enable pen testers to focus on what matters: adversary-oriented penetration testing to detect the most difficult vulnerabilities and exploits? What correlations exist between successful exploits and underlying application or network characteristics? And how can we ensure findings actually make it back into the development lifecycle in a meaningful way?Our research, and Python-based VAPT framework seeks to address these questions, and automates certain tasks to assist pen testers:For each application or network update, network reconnaissance and application/network vulnerability assessments are performed using NMap, Nessus, OpenVAS, and W3AFIdentified vulnerabilities, and their CVEs, are used for retrieving relevant exploits from ExploitDBPenetration tests are performed using W3AF and MetasploitResults obtained at each stage are stored and correlated as part of a (Neo4j-based) knowledge graph, which can be maintained across several (application) releases and tool runs. This allows for:Pen Testers to easily visualize vulnerabilities discovered, and successful/failed exploits - in order to rapidly gain context of additional potential exploits that may be run or vulnerabilities that may be discoverable through sophisticated, manual techniquesDevelopers to visualize vulnerabilities that are persistent across multiple parts of their product/application, and/or across multiple successive releasesWe will demo this initial version at Arsenal, however the extensible nature of our framework allows for integration of additional vulnerability assessment & penetration testing tools or (pre-deployment) code security review tools and their findings as well.",
  "Year": "2016",
  "Location": "Europe"
}