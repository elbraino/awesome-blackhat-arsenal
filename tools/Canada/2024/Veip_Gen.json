{
  "Tool Name": "Veip_Gen",
  "Speakers": [
    "Austin Norby"
  ],
  "Tracks": [
    "Track: Vulnerability Assessment"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": null,
  "Description": "Veip_Gen is a scriptable, command-line based tool for generating vulnerable programs to support teaching and learning buffer overflow vulnerabilities. The capability uses well-known vulnerable functions with a configurable amount of stack space and buffer sizes to create unique, vulnerable programs as examples for exploitation.\n\nThe capability allows you to specify vulnerable functions such as strcpy, sprintf, gets, and more. In addition, the configurable stack size and buffer size introduces different amounts of stack space that needs to be overflowed to teach, or learn, about the conditions that make buffer overflows exploitable. In addition, there are currently two major types of exploitable programs that can be produced: vanilla and conditional. The vanilla buffer overflows are what you see when first learning to overwrite the EIP register and gain execution from the stack. This type is still configurable with stack and buffer sizes as well. Second, the conditional type lets you configure a condition that must be satisfied before being able to exploit the example, vulnerable program. Either, there must be a certain number of arguments present or there must be a series of bytes that must be matched in order to trigger the vulnerable code path.\n\nReducing the barrier to entry and education for complex, cyber security topics will increase the readiness and capability of the cyber security workforce writ large and this tool will help those both teaching and learning to better understand the buffer overflow exploits with an unlimited number of examples that can be created simply from the command-line.",
  "Year": "2024",
  "Location": "Canada"
}