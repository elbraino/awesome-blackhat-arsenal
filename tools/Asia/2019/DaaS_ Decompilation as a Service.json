{
  "Tool Name": "DaaS: Decompilation as a Service",
  "Speakers": [
    "Lucas Esposito",
    "Rodrigo Cetera"
  ],
  "Tracks": [
    "Track: Reverse Engineering"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": null,
  "Description": "\"Decompilation-as-a-Service\" or \"DaaS\" is a tool designed to change the way of file decompiling. An analyst usually decompiles malware samples one by one using a program with a GUI. That's pretty good when dealing with a few samples, but it becomes really tedious to do with larger amounts. Not to mention if you have to decompile different types of files, with different tools and even different operating systems. Besides, lots of decompilers cannot be integrated with other programs because they do not have proper command line support.\n\nDaaS aims to solve all those problems at the same time. The most external layer of DaaS is docker-compose, so it can run on any OS with Docker support. All the other components run inside Docker so now we can integrate the decompiler with any program on the same computer. In addition, we developed an API to use DaaS from the outside, so you can also connect the decompiler with programs from other computers and use the decompiler remotely. In our particular case at Deloitte Threat Intelligence team, we needed to decompile thousands of samples received from different systems and to be able to distribute processing and dynamically scale our capabilities.\n\nAlthough the tool's modular architecture allows you to easily create workers for decompiling many different file types, we started with the most challenging problem: decompile .NET executables. To accomplish that, we used Wine on a Docker container to run Windows decompilers flawlessly on a Linux environment. In addition, on Windows some programs create useless or invisible windows in order to work, so we needed to add xvfb (x11 virtual frame buffer; a false x11 environment) to wrap those decompilers and avoid crashes on our pure command line environment. This allows you to install DaaS in any machine without desktop environment and be able to use any decompiler anyway.\n\nYou can access the tool's source code at: https://github.com/codexgigassys/daas",
  "Year": "2019",
  "Location": "Asia"
}