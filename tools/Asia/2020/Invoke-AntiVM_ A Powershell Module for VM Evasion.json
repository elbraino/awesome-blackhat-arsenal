{
  "Tool Name": "Invoke-AntiVM: A Powershell Module for VM Evasion",
  "Speakers": [
    "Paolo Di Prodi",
    "Fred Gutierrez"
  ],
  "Tracks": [
    "Track: Exploitation and Ethical Hacking"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": null,
  "Description": "Recently, attackers have been using living off the land tools such as Powershell and the community has developed a large arsenal based on it such as - just to mention a few - PowerSploit, Invoke-Mimikatz, Powerup, Nishang,Powershell Empire, Invoke-Obfuscation and recently Covenant.\n\nWith so many options available to attackers Windows has introduced advanced Powershell logging capabilities and the AMSI interface.\n\nThis is not enough however because the attackers have started to use VM detections within their payload to thwart analysis, one needs to remember that powershell script logging only de-obfuscate the functions that have been executed.\n\nTherefore we wrote a powershell module with a set of functions that an attacker or a pentester can import in their powershell implant to decide whether the target is a sandbox VM or possibly a real target. In addition to the techniques used in Nishang (Check-VM) which are mostly based on signatures of specific registry keys and process names, we have used a more general \u2013 and behavioral \u2013 approach which includes all the information from the OS including for example how many programs are installed, what screenshot is used, what network cards are installed, what is the history usage of certain applications such as explorer or word etc. etc.\n\nWe have also added a fingerprinting module which can be included into a word document for example that once is run collects key metrics from the running OS and reports them into a pastebin account or gmail account, after being compressed and encrypted. Once on pastsebin the attacker can download the exfiltrated profile via a python script and decode for further analysis. We are also building a simple machine learning module that given enough data points is able to infer the decision boundary to determine if a host is a VM or not in addition or in replacement of setting manual thresholds.\n\nThis is a pretty powerful recon technique for red-team pentesting because in most cases the sandbox will execute the incoming attached documents (if they contain macros for example) thus allowing the exfiltration of the VM data. This can then be used to tweak the payload to avoid the specific sandbox solution and to make sure the malicious payload is run into a real target.\n\nWe developed this tool to increase awareness of recent techniques for the reverser community. It includes a full readme that explains how can be just in conjunction with Invoke-Obfuscation, Invoke-Cradle and the MaliciousMacroGenerator. We are also periodically running the fingerprinting service to provide profiles for popular online services such as HybridAnalysis, AnyRun, CuckooSandbox as well desktop solutions such as Qemu, VirtualBox, and VMWare.",
  "Year": "2020",
  "Location": "Asia"
}