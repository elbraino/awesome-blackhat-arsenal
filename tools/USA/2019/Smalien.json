{
  "Tool Name": "Smalien",
  "Speakers": [
    "Hiroki Inayoshi",
    "Kazuya Aoki"
  ],
  "Tracks": [
    "Track: Android",
    "iOS and Mobile Hacking"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": null,
  "Description": "Investigating how an application handles sensitive information is essential for mobile security researchers to understand behavior of the application and determine whether it is harmless or malicious. Our information flow analysis and information leakage detection tool, called Smalien, should be a good buddy when you start a journey of Android application analysis. Once you give an application to Smalien, it understands the application thoroughly by executing static information flow analysis of Dalvik bytecode files extracted from the application. Smalien performs not only static analysis but also dynamic analysis, implicit information flow detection, and privacy policy enforcement at runtime by parasitizing the application. Smalien instruments additional bytecode to the application, and the bytecode executes dynamic analysis when the application has launched on an Android device.\nSmalien has following functions, and we will give a demonstration of it with real-world applications during the tool session.\n\n\nSmalien analyzes an Android application statically and gathers information of classes, methods, variables, etc.\nSmalien presents the results of the analysis graphically such as a method call graph and an information flow diagram\nSmalien performs dynamic taint analysis on an Android device\nSmalien enforces privacy policy specified by an analyst\nSmalien detects information leakage due to implicit information flows\nSmalien logs actual information operated by any bytecode or API call, such as http request, at runtime to encourage an analyst in his/her inspection",
  "Year": "2019",
  "Location": "USA"
}