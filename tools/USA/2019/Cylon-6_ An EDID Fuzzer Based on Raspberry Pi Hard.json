{
  "Tool Name": "Cylon-6: An EDID Fuzzer Based on Raspberry Pi Hardware",
  "Speakers": [
    "Wei Wang"
  ],
  "Tracks": [
    "Track: Hardware/Embedded"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": null,
  "Description": "EDID stands for \"Extended Display Identification Data\", is a data format for monitors to describe thier capabilities, such as screen size or resolutions. EDID is transmitted to graphics card through DDC, a data channel based on I2C bus, which directly bridges the graphics card and EEPROM inside display devices.\n\nThe EDID data (128 or 256 Bytes) is stored in EEPROM. So, there is an attack scenario by messing with EDID data. Andy Davis already made a speech at BlackHat EU 2012 to show his research on fuzzing EDID and CEC, and he did find some vulnerabilities or problems. However, Raspberry Pi (RPi) was not widely used at the time when Andy chose Arduino to do the job. So, we build an EDID fuzzer based on RPi, making it rather easy to perform EDID fuzzing.\n\nWe make RPi to work as an I2C slave device with the help of GPIO, and simulate EEPROM operations to act like a real EEPROM device. Thus we can return any data back to operating system when VGA or HDMI cable is plugged in. Besides, this tool is also able to attach and detach the \"display\" automatically, by setting high or low voltage on the \"hotplug\" pin inside VGA and HDMI interfaces.\n\nIn general, this tool is will assist security researchers to perform EDID fuzzing against any kinds of graphics drivers, without knowing about I2C protocol or EEPROM. All we need is a RPi (2 or later) , and use some dupont lines to connect the RPi to VGA/HDMI interfaces. The code and documents will be available on Github as soon as been fully tested. And we will appreciate it if anyone interested in this project helps to improve it and make it a powerful tool for IoT security filed.\n\nSource code: https://github.com/kings-way/cylon-6",
  "Year": "2019",
  "Location": "USA"
}