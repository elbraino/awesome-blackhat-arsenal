{
  "Tool Name": "SILENTTRINITY (v0.2.0): Async Post-Exploitation Agent Powered by Python, C# & .NET's DLR",
  "Speakers": [
    "Marcello Salvati"
  ],
  "Tracks": [
    "Track: Malware Offense"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": "https://github.com/rmusser01/Infosec_Reference/blob/master/Draft/RT.md",
  "Description": "SILENTTRINITY is an asynchronous post-exploitation agent powered by Python, IronPython, C# and .NET's DLR (Dynamic Language Runtime), it attempts to weaponize and demonstrate the flexibility that BYOI (Bring Your Own Interpreter) payloads have over traditional C# implants. What are BYOI payloads? Turns out, by harnessing the sheer craziness of the .NET framework, you can embed entire interpreters inside of .NET languages allowing you to natively execute scripts written in third-party languages (like Python) on windows! Not only does this allow you to dynamically access all of the .NET API from a scripting language of your choosing, but it also allows you to still remain completely in memory and has a number of advantages over traditional C# payloads! Essentially, BYOI payloads allow you to have all the \"power\" of PowerShell, without going through PowerShell in anyway! Additionally, you can nest multiple interpreters within each other to perform what I've coined \"engine inception\"! If you're interested in bleeding-edge and out of the ordinary C#/.NET offensive trade-craft, this is the demo for you!",
  "Year": "2019",
  "Location": "USA"
}