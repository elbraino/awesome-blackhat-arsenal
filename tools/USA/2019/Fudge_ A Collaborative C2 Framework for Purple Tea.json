{
  "Tool Name": "Fudge: A Collaborative C2 Framework for Purple Teaming",
  "Speakers": [
    "Kris Anderson"
  ],
  "Tracks": [
    "Track: Network Attacks"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": "https://github.com/IvanLazarevsky/AIML_1sem/blob/master/nltk_feature_names4_wm.json",
  "Description": "Fudge is a Python3/Flask web-based C2 framework and Powershell implant designed to facilitate purple teaming activities, post-campaign review and timelining.\n\nFudges' inception is based on 3 main areas:\n\nCreating a suitable way for blue teamers to review the chronological activities a red team engagement, allowing them to assess if key alerts were missed.\nFinding ways to incrementally increase detection rates, allowing defenders to identify the intrusion. This provides a gauge of skill & target areas for upskilling if the intrusion is not identified.\nProviding a way for junior testers to experience red teaming without increasing risk to the campaign OpSec/client network.\nPurple teaming was born out of the need for tighter integration between offensive and defensive teams. If the red team is successful in compromise, their ability to export the campaign timeline and logging can prove invaluable insight to the blue team. Allowing defenders to review network and host logs as they follow a campaign timeline, allows for blind spots to be identified and tooling adjusted and tuned.\n\nFudges' implant also supports varying levels and types of obfuscation to allow for varying levels of noise to be made during the engagement to help a SoC benchmark their detection skills.\n\nLastly, Fudge is designed around team usage, which allows for a senior red teamer to allow another user to have read or read/write access to the campaign. These access controls allow a junior member to view the campaign and see the kind of commands, and techniques used in a post-exploitation environment.\n\nFudge can be found on Github at: https://github.com/Ziconius/Fudge",
  "Year": "2019",
  "Location": "USA"
}