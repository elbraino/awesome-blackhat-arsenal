{
  "Tool Name": "AVET: AntiVirus Evasion Tool",
  "Speakers": [
    "Daniel Sauder"
  ],
  "Tracks": [
    "Track: Exploitation and Ethical Hacking"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": "https://github.com/govolution/avetosx",
  "Description": "AVET is an antivirus evasion tool that is based on different antivirus evasion techniques as described in my research, found here:\n\nhttps://govolutionde.files.wordpress.com/2014/05/avevasion_pentestmag.pdf\nhttps://deepsec.net/docs/Slides/2014/Why_Antivirus_Fails_-_Daniel_Sauder.pdf\n\nWhat & Why:\n\nWhen running an exe file made with msfpayload & co, the exe file will often be recognized by the antivirus software\nAVET is an antivirus evasion tool targeting windows machines with executable files\nDifferent kinds of payloads can be used now: shellcode, exe and dlls\nMore techniques can be used now, such as shellcode injection, process hollowing and more\nMost payloads can be delivered from a file, the network or command line\nThe payload can be encrypted with a key, the key can be delivered like payloads\nTested for Kali 2018.x (64bit) and tdm-gcc (should work on other Kali/Linux/32bit versions also)\n\nAVET Version 2 was released in the beginning of 2019:\n\nInternal mechanisms for building the executable have been rewritten, new features can be added much easier now\nhttps://github.com/govolution/bfg has been integrated\n\nWith the new architecture and features of AVET 2 you can, for example, now build an executable that is loading an encrypted .exe file via network or file, receiving the key also via network or file, decrypt in memory and then inject via process hollowing. The same applies also for other payloads like shellcode or dlls and other techniques.\n\nPresentation: https://govolution.files.wordpress.com/2019/08/bhusa19_arsenal_avet.pdf",
  "Year": "2019",
  "Location": "USA"
}