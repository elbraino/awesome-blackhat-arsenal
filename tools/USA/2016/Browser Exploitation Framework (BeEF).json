{
  "Tool Name": "Browser Exploitation Framework (BeEF)",
  "Speakers": [
    "Christian Frichot"
  ],
  "Tracks": [
    "Track: Web AppSec"
  ],
  "Event": "BH-US-16",
  "Github URL": "https://github.com/beefproject/beef/wiki/References",
  "Description": "The little browser hacking framework that could; BeEF (Once again voted in the top 5 security tools on ToolsWatch.org) is back again for another hands on JavaScript-filled arsenal session of insanity. If you've seen people talk about BeEF, and haven't gotten around to getting your hands dirty, then now is the perfect time to look under the cover and see how hook.js works. While the framework itself is hanging together with duct tape, Ruby and JavaScript, the capabilities of BeEF have been slowly marching forward year by year, with new features being added almost as quickly as new HTML5 APIs are added to browsers. Two of the larger additions to the framework have been the Autorun Rules Engine (ARE) and the Network Extension, the brain-children of @antisnatchor and @_bcoles. But BeEF isn't just about client-side testing, it's also a great tool if you need to quickly PoC JavaScript-based payloads.This session will cover the following:Hands on with the Autorun Rules Engine (clever scheduling and automation of multiple payloads)Network Extension (just how much local network can a browser see?)Having fun with CSRFSo you think HttpOnly & Secure flags really help?Attendees will hopefully have a better appreciation of how BeEF works, and how custom modules and extensions can be developed to meet any custom requirements you may have.",
  "Year": "2016",
  "Location": "USA"
}