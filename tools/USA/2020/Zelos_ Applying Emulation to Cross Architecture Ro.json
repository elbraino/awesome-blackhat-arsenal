{
  "Tool Name": "Zelos: Applying Emulation to Cross Architecture Root Cause Analysis",
  "Speakers": [
    "Kevin Valakuzhy"
  ],
  "Tracks": [
    "Track: Vulnerability Assessment"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": null,
  "Description": "Zelos (Zeropoint Emulated Lightweight Operating System) is a python-based binary emulation platform that omits the cumbersome setup of virtual machines, yet provides instrumentation capabilities missing in user-space emulation. While it is built on top of the QEMU powered Unicorn CPU emulator, Zelos provides the operating system details required to fully emulate binary execution from loading, down to system calls. We quickly found use for Zelos as a dynamic instrumentation tool that could unpack malware, categorize and report malicious behavior, as well as extract domains from Domain Generation Algorithms (DGA). The myriad of uses we uncovered drove us to develop a plugin system to encourage extensions.\n\nIn this demo, in addition to highlighting Zelos's core dynamic analysis features, we'll showcase a new plugin released at BlackHat which provides automated root cause analysis (RCA), a method of identifying causes of crashes, through data flow analysis. Applications of automated RCA range from helping developers locate and fix bugs to triaging crashes generated through fuzzing. Existing techniques for identifying root cause through data flow analysis may require recompilation of binaries to insert instrumentation, integration of multiple tools, or collecting execution traces. Using Zelos, identifying the root cause can be as simple as providing the binary with the crashing input. We will highlight how we perform architecture agnostic dataflow analysis by utilizing QEMU's internal assembly code representation and show how easy RCA can be, even without source code.",
  "Year": "2020",
  "Location": "USA"
}