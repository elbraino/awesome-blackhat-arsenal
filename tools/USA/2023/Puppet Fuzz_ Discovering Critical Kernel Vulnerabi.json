{
  "Tool Name": "Puppet Fuzz: Discovering Critical Kernel Vulnerabilities with Innovative Approach",
  "Speakers": [
    "Siqi Chen",
    "Minghang Shen",
    "Chunyang Han",
    "Xin Wang"
  ],
  "Tracks": [
    "Hardware / Embedded",
    "Exploitation and Ethical Hacking"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": null,
  "Description": "Internet of Things (IoT) devices have become an integral part of our lives, but their security vulnerabilities pose a significant risk to our privacy and security. While previous research has focused on user space components of embedded firmware, we have discovered that kernel vulnerabilities in these complex devices are particularly high-risk, potentially leading to full system compromise.\nKernel modules are typically tightly bound to the kernel, but because different IoT devices use different kernel versions and compile options, it is difficult to load them correctly in other simulated environments. However, true device-based fuzz testing is very time-consuming and resource-intensive. Additionally, unlike user-level programs, kernel-level programs require a device reboot after every crash, which further limits the development of IoT kernel fuzz testing.\nTo address these challenges, we propose a novel approach that abstracts closed-source kernel modules code to execute on a stable Linux kernel environment that we have constructed by using our aspect oriented system. This platform allows us to transfer library function calls and stack management, enabling us to detect kernel-level vulnerabilities that were previously difficult to identify. In addition, due to our front-end and back-end separation design, the platform can easily support IoT drivers of multiple architectures. Our approach has enabled us to discover a multitude of issues across devices from top manufacturers such as Netgear, Cisco, Asus, HP,TPLink,DLink and Western Digital etc.\nIn this talk, we will show our method and present one such universal kernel hardware module vulnerability, demonstrating how we were able to exploit a kernel driver vulnerability to achieve remote command execution on the device. Our platform provides a replicable and stable environment that forms the basis for efficient and effective kernel fuzz testing, ultimately improving the security of IoT devices and protecting the privacy of their users.",
  "Year": "2023",
  "Location": "USA"
}