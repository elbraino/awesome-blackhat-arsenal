{
  "Tool Name": "Dvora",
  "Speakers": [
    "Ofri Ouzan"
  ],
  "Tracks": [
    "Track: Vulnerability Assessment"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": "https://github.com/jfrog/Dvora",
  "Description": "Dvora is an open-source Python tool designed to enhance the detection capabilities of Static Application Security Testing (SAST) solutions.\n\nWhile SAST tools are essential for securing source code and detecting vulnerabilities, they primarily rely on predefined patterns and known library functions to analyze vulnerable code flows. This creates a critical blind spot when zero-day vulnerabilities emerge in flows using custom or inline implementations of these dangerous functions (ex. strcpy).\n\nAs a result, security vulnerabilities are not flagged by SAST engines, which allow attackers to exploit them. Dvora addresses this gap by analyzing individual functions in compiled ELF binaries and assigning well-known function names (ex. strcpy) for functions that implement the relevant behavior.\n\nThe analysis is powered by two main components:\nA Unicorn-based emulation engine that can run individual functions straight from a compiled binary on multiple architectures\nA set of rules that maps input and output arguments to well-known function names\nFollowing the analysis, Dvora adds the discovered function symbols to the ELF's symbol section, which transparently improves any subsequent runs of other SAST tools.\n\nBy identifying risks at the logic level rather than relying solely on known function signatures, Dvora empowers security teams to uncover previously overlooked threats and strengthen application security.\n\nAs an open-source initiative, Dvora encourages collaboration from the cybersecurity community to expand its capabilities and continuously improve detection by mapping more library functions and allowing the emulation engine to run on more relevant cases.",
  "Year": "2025",
  "Location": "USA"
}