{
  "Tool Name": "Effective Security Code Reviews in Visual Studio - Introducing Static Analysis Hero (SAH)",
  "Speakers": [
    "Matthias G\u00f6hring",
    "Dustin Born"
  ],
  "Tracks": [
    "Track: Code Assessment"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": "https://github.com/bpred754/AlgorithmsAndDataStructures/blob/master/Java/SelectionSort/googleBooks10000.txt",
  "Description": "Static Analysis Hero (SAH) is an extension to Visual Studio Code dedicated to identifying software vulnerabilities and enhancing static source code analysis. Its main features fall into two categories: 1. code scanning (identify vulnerabilities) and 2. integrated documentation (managing vulnerabilities).\nCode scanning for vulnerable patterns and potential security vulnerabilities is based on semgrep/opengrep as well as built-in regular expressions. Semgrep scans can be started from the tool directly using all available (or custom) rulesets. Results are automatically imported into SAH. Furthermore, SAH includes pre-defined regex rulesets for multiple languages and frameworks \u2013 but can also easily be extended with custom rulesets for specific project requirements.\nFor documentation of findings (either identified by code scanning or manual analysis), SAH allows commenting, bookmarking, prioritization and exporting/importing of findings. The documentation features are intended to enable a more streamlined process during code reviews, as analysts do not have to switch between different tools for performing the analysis and documentation of results. Finally, the state of a project can be exported for collaboration, e.g. to share the current state of a project with your team members.\nOverall, the functionality of SAH integrates perfectly with the power of VS Code as an IDE \u2013 which is essential for efficient navigation in large code bases. It also integrates nicely with other plugins such as linting and programming language specific extensions. SAH is fully open-source and does not require an internet connection or user account.\n\nSAH is intended to be used by developers and security professionals alike, who seek to identify software vulnerabilities in source code and follow-up on them in a structured manner. More specifically, we use SAH during code reviews for our clients, but also during penetration tests on web applications, APIs, desktop applications and the like whenever we get access to source code.",
  "Year": "2025",
  "Location": "USA"
}