{
  "Tool Name": "Automating Red Team Operations in Windows AD with Local LLM and Multi AI Agents",
  "Speakers": [
    "Yu Terada"
  ],
  "Tracks": [
    "Track: Exploitation and Ethical Hacking"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": "https://github.com/daqcri/deeper-lite/blob/master/python/BenchmarkDatasets/DBLP_ACM/ACM.csv",
  "Description": "Modern Red Team assessments in Windows Active Directory (AD) environments often involve navigating a vast array of machines, accounts, making them highly resource-intensive. To streamline these engagements, I developed a prototype automated penetration testing tool that leverages local Large Language Models (LLMs) and specialized AI Agents. Because AD environments often contain large amounts of confidential data, this solution can operate entirely within a closed environment, mitigating the risk of data leakage. I verified that the system runs effectively on a single PC.\n\nA fundamental challenge with local LLMs is that they often lack sufficient domain-specific knowledge, particularly with regard to attacker tools and methodologies. I address this limitation by restricting the set of utilized tools (e.g., Mimikatz, Psexec, PowerView) and designing specialized Agents for each. I also enhance the models' reasoning with Retrieval-Augmented Generation (RAG) pipelines that focus on typical AD attack paths. Each Agent is based on the ReAct model and logs its thought process and executed commands to visualize the flow of reasoning.\n\nBeyond the immediate goal of reducing the effort required for Red Team operations, this research also examines a future threat vector. I anticipate that adversaries will soon embed local LLMs into malware, enabling offline attacks on isolated machines\u2014such as web-isolated hosts or local networks. These attacks do not generate network traffic, thereby evading detection by security appliances that monitor outbound traffic. To evaluate the potential efficacy of local AI-driven automation\u2014given that most Windows devices are equipped only with a CPU\u2014this tool will be tested using a model that runs on the CPU.",
  "Year": "2025",
  "Location": "USA"
}