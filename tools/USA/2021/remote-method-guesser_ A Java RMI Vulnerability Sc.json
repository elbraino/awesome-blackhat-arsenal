{
  "Tool Name": "remote-method-guesser: A Java RMI Vulnerability Scanner",
  "Speakers": [
    "Tobias Neitzel"
  ],
  "Tracks": [
    "Track: Vulnerability Assessment"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": "https://github.com/qtc-de/remote-method-guesser",
  "Description": "remote-method-guesser (rmg) is a Java RMI vulnerability scanner that checks for common misconfigurations on Java RMI endpoints.\nIt combines well known techniques for RMI enumeration with detection capabilities for lesser known attack vectors that are often missed.\nApart from detecting RMI vulnerabilities, remote-method-guesser can perform attack operations for each supported vulnerability type.\nThe following list shows some of it's currently supported operations:\n\n* List available bound names and their interface class names\n* List codebase locations (if exposed by the remote server)\n* Check for known vulnerabilities (enabled class loader, missing JEP290, JEP290 bypasses, localhost bypass (CVE-2019-2684))\n* Identify existing remote methods by using a bruteforce (wordlist) approach\n* Call remote methods with user specified arguments (no manual coding required)\n* Call remote methods with ysoserial gadgets within the arguments\n* Call remote methods with a client specified codebase (remote class loading attack)\n* Perform DGC, registry and activator calls with ysoserial gadgets or a client specified codebase\n* Perform bind, rebind and unbind operations against an RMI registry\n* Bypass registry deserialization filters by using An Trinhs registry bypass\n* Enumerate the unmarshalling behavior of java.lang.String\n* Create Java code dynamically to invoke remote methods manually",
  "Year": "2021",
  "Location": "USA"
}