{
  "Tool Name": "Stop Wasting Time: Use Falco Plugins to Extend Detection with any Event Stream",
  "Speakers": [
    "Stefano Chierici",
    "Alberto Pellitteri"
  ],
  "Tracks": [
    "Data Forensics/Incident Response",
    "Malware Defense"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": null,
  "Description": "Data leaks can cost companies a fortune, storing millions of logs which \"might\" come in handy in the future. The majority of the time, only a small portion of those logs are actually useful in the event of a security investigation. Using newly developed Falco plugins, you can generate live events for the point in time you are interested in and forward those for further analysis, speeding and simplifying incident response.\n\nFalco is a CNCF open source container security tool designed to detect anomalous activity in your local machine, containers, and Kubernetes clusters. It taps into Linux kernel system calls and Kubernetes Audit logs to generate an event stream of all system activity. Thanks to its powerful and flexible rules language, Falco will generate security events when it finds malicious behaviors as defined by a customizable set of Falco rules.\n\nThe recent major Falco update introduced support of Falco Plugins, opening Falco to a new world of data that Falco can handle and process. This new approach allows users to create and integrate different types of Falco plugins and extend the Falco detection engine with new event sources and generate security events using Falco rules. The event sources that can be integrated in Falco are infinited. AWS CloudTrail, Docker, and Video Stream are already available, and the Falco community is already working on new plugins to integrate new event sources.\n\nDuring this talk, we show the new Falco plugins approach and how you can use it in real breaches. The recent OKTA breach is a perfect example. By developing the related plugin and Falco rules for OKTA events, it was possible to detect and get an immediate alert if something anomalous happened in your environment.",
  "Year": "2022",
  "Location": "USA"
}