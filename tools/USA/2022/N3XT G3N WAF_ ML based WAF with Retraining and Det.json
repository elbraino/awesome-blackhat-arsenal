{
  "Tool Name": "N3XT G3N WAF: ML based WAF with Retraining and Detainment through Honeypots",
  "Speakers": [
    "Pengfei Yu",
    "Bosen Zhang",
    "Matthew Ng",
    "Elizabeth Lim"
  ],
  "Tracks": [
    "Network Defense",
    "Web AppSec"
  ],
  "Event": "BH-ARSENAL",
  "Github URL": null,
  "Description": "With the explosive growth of web applications since the early 2000s, web-based attacks have progressively become more rampant. One common solution is the Web Application Firewall (WAF). However, tweaking rules of current WAFs to improve the detection mechanisms can be complex and difficult.\n\nNGWAF seeks to address the drawback method mentioned earlier with a novel machine learning and honeypot based architecture.\n\nFirstly, we replace the traditional rulesets with deep learning models to reduce the complexity of managing and updating those rules. Instead of manually identifying rules, we use machine learning to automate the process of learning patterns from previous malicious data. In addition, we include a system model maintenance where we monitor the performance of the model and regularly retrain the model with new malicious data collected. A detection mechanism based on a fully automated machine learning pipeline will greatly reduce the manpower required and potential for error involved in WAF maintenance.\n\nMalicious data detected will then be redirected into our novel system: an interactive, honeypotted, quarantine environment built to isolate potential hostile attackers and act as a sinkhole to gather current attack methods. Unlike conventional WAFs that just drop or block malicious attempts, NGWAF traps and diverts the threat actors to emulated systems to soften the impact of their malicious actions. By detaining the attacker to a series of scalable honeypotted environments, we are able to observe and collect their out-in-the-wild malicious data for future improvements to the detection mechanism. These data are automatically scrubbed and can be batched to be retrained into our detection model.\n\nNGWAF is scalable and can be easily deployed either natively or in a cloud environment.",
  "Year": "2022",
  "Location": "USA"
}